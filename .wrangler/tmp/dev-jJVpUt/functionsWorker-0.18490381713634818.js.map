{
  "version": 3,
  "sources": ["../bundle-LfDkkP/checked-fetch.js", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-WUW6O0/checked-fetch.js", "../pages-yWFpdd/wrangler-modules-watch:wrangler:modules-watch", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/@tsndr/cloudflare-worker-jwt/index.js", "../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../node_modules/uuid/dist/esm-browser/regex.js", "../../../node_modules/uuid/dist/esm-browser/validate.js", "../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../node_modules/uuid/dist/esm-browser/v1.js", "../../../node_modules/uuid/dist/esm-browser/parse.js", "../../../node_modules/uuid/dist/esm-browser/v35.js", "../../../node_modules/uuid/dist/esm-browser/md5.js", "../../../node_modules/uuid/dist/esm-browser/v3.js", "../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../node_modules/uuid/dist/esm-browser/sha1.js", "../../../node_modules/uuid/dist/esm-browser/v5.js", "../../../node_modules/uuid/dist/esm-browser/nil.js", "../../../node_modules/uuid/dist/esm-browser/version.js", "../../../node_modules/uuid/dist/esm-browser/index.js", "../../../functions/api/admin/account.js", "../../../functions/api/admin/email.js", "../../../functions/api/admin/image.js", "../../../functions/api/database/lookUp.js", "../../../functions/api/database/schema.js", "../../../functions/api/database/table.js", "../../../functions/api/properties/crowdfund.js", "../../../functions/api/properties/distributions.js", "../../../functions/api/properties/report.js", "../../../functions/api/settings.js", "../pages-yWFpdd/functionsRoutes-0.3168043842126802.mjs", "../bundle-WUW6O0/middleware-loader.entry.ts", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-WUW6O0/middleware-insertion-facade.js", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/pages-template-worker.ts", "../../../../../../../../../../usr/local/lib/node_modules/path-to-regexp/src/index.ts", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-LfDkkP/middleware-insertion-facade.js", "../bundle-LfDkkP/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/dev-jJVpUt",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "class Base64URL {\n    static parse(s) {\n        return new Uint8Array(Array.prototype.map.call(atob(s.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '')), c => c.charCodeAt(0)))\n    }\n    static stringify(a) {\n        return btoa(String.fromCharCode.apply(0, a)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n    }\n}\n\nclass JWT {\n    constructor() {\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            throw new Error('Crypto not supported!')\n        this.algorithms = {\n            ES256: { name: 'ECDSA', namedCurve: 'P-256', hash: { name: 'SHA-256' } },\n            ES384: { name: 'ECDSA', namedCurve: 'P-384', hash: { name: 'SHA-384' } },\n            ES512: { name: 'ECDSA', namedCurve: 'P-521', hash: { name: 'SHA-512' } },\n            HS256: { name: 'HMAC', hash: { name: 'SHA-256' } },\n            HS384: { name: 'HMAC', hash: { name: 'SHA-384' } },\n            HS512: { name: 'HMAC', hash: { name: 'SHA-512' } },\n            RS256: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } },\n            RS384: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-384' } },\n            RS512: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-512' } },\n        }\n    }\n    _utf8ToUint8Array(str) {\n        return Base64URL.parse(btoa(unescape(encodeURIComponent(str))))\n    }\n    _str2ab(str) {\n        const buf = new ArrayBuffer(str.length);\n        const bufView = new Uint8Array(buf);\n        for (let i = 0, strLen = str.length; i < strLen; i++) {\n            bufView[i] = str.charCodeAt(i);\n        }\n        return buf;\n    }\n    _decodePayload(raw) {\n        switch (raw.length % 4) {\n            case 0:\n                break\n            case 2:\n                raw += '=='\n                break\n            case 3:\n                raw += '='\n                break\n            default:\n                throw new Error('Illegal base64url string!')\n        }\n        try {\n            return JSON.parse(decodeURIComponent(escape(atob(raw))))\n        } catch {\n            return null\n        }\n    }\n    async sign(payload, secret, options = { algorithm: 'HS256', header: { typ: 'JWT' } }) {\n        if (typeof options === 'string')\n            options = { algorithm: options, header: { typ: 'JWT' } }\n        options = { algorithm: 'HS256', header: { typ: 'JWT' }, ...options }\n        if (payload === null || typeof payload !== 'object')\n            throw new Error('payload must be an object')\n        if (typeof secret !== 'string')\n            throw new Error('secret must be a string')\n        if (typeof options.algorithm !== 'string')\n            throw new Error('options.algorithm must be a string')\n        const importAlgorithm = this.algorithms[options.algorithm]\n        if (!importAlgorithm)\n            throw new Error('algorithm not found')\n        payload.iat = Math.floor(Date.now() / 1000)\n        const payloadAsJSON = JSON.stringify(payload)\n        const partialToken = `${Base64URL.stringify(this._utf8ToUint8Array(JSON.stringify({ ...options.header, alg: options.algorithm, kid: options.keyid })))}.${Base64URL.stringify(this._utf8ToUint8Array(payloadAsJSON))}`\n        let keyFormat = 'raw'\n        let keyData\n        if (secret.startsWith('-----BEGIN')) {\n            keyFormat = 'pkcs8'\n            keyData = this._str2ab(atob(secret.replace(/-----BEGIN.*?-----/g, '').replace(/-----END.*?-----/g, '').replace(/\\s/g, '')))\n        } else\n            keyData = this._utf8ToUint8Array(secret)\n        const key = await crypto.subtle.importKey(keyFormat, keyData, importAlgorithm, false, ['sign'])\n        const signature = await crypto.subtle.sign(importAlgorithm, key, this._utf8ToUint8Array(partialToken))\n        return `${partialToken}.${Base64URL.stringify(new Uint8Array(signature))}`\n    }\n    async verify(token, secret, options = { algorithm: 'HS256', throwError: false }) {\n        if (typeof options === 'string')\n            options = { algorithm: options }\n        options = { algorithm: 'HS256', throwError: false, ...options }\n        if (typeof token !== 'string')\n            throw new Error('token must be a string')\n        if (typeof secret !== 'string')\n            throw new Error('secret must be a string')\n        if (typeof options.algorithm !== 'string')\n            throw new Error('options.algorithm must be a string')\n        const tokenParts = token.split('.')\n        if (tokenParts.length !== 3)\n            throw new Error('token must consist of 3 parts')\n        const importAlgorithm = this.algorithms[options.algorithm]\n        if (!importAlgorithm)\n            throw new Error('algorithm not found')\n        const { payload } = this.decode(token)\n        if (payload.nbf && payload.nbf > Math.floor(Date.now() / 1000)) {\n            if (options.throwError)\n                throw 'NOT_YET_VALID'\n            return false\n        }\n        if (payload.exp && payload.exp <= Math.floor(Date.now() / 1000)) {\n            if (options.throwError)\n                throw 'EXPIRED'\n            return false\n        }\n        let keyFormat = 'raw'\n        let keyData\n        if (secret.startsWith('-----BEGIN')) {\n            keyFormat = 'spki'\n            keyData = this._str2ab(atob(secret.replace(/-----BEGIN.*?-----/g, '').replace(/-----END.*?-----/g, '').replace(/\\s/g, '')))\n        } else\n            keyData = this._utf8ToUint8Array(secret)\n        const key = await crypto.subtle.importKey(keyFormat, keyData, importAlgorithm, false, ['verify'])\n        return await crypto.subtle.verify(importAlgorithm, key, Base64URL.parse(tokenParts[2]), this._utf8ToUint8Array(`${tokenParts[0]}.${tokenParts[1]}`))\n    }\n    decode(token) {\n        return {\n            header: this._decodePayload(token.split('.')[0].replace(/-/g, '+').replace(/_/g, '/')),\n            payload: this._decodePayload(token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/'))\n        }\n    }\n}\n\nmodule.exports = new JWT\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "/*\n    This endpoint deals with users\n    note: we could move login into here and  possible register\n\n*/\n\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\n\n\n//set the UUID \nvar uuid = require('uuid');\nexport async function onRequestPost(context) {\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n\n    //set a valid boolean\n    let valid = 1;\n    const contentType = request.headers.get('content-type')\n    let registerData;\n    if (contentType != null) {\n        registerData = await request.json();\n        console.log(registerData);\n        //check if we want to create a user\n        if (registerData.action == 1) {\n            const query = context.env.DB.prepare(`SELECT COUNT(*) as total from user where email = '${registerData.email}'`);\n            const queryResult = await query.first();\n            if (queryResult.total == 0) {\n                let apiSecret = uuid.v4();\n                let verifyCode = uuid.v4();\n\n                const info = await context.env.DB.prepare('INSERT INTO user (username, email,password,apiSecret,confirmed,isBlocked,isAdmin,verifyCode) VALUES (?1, ?2,?3,?4,?5,?6,?7,?8)')\n                    .bind(registerData.username, registerData.email, registerData.password, apiSecret, 0, 0, 0, verifyCode)\n                    .run()\n\n                if (info.success == true) {\n\n                    //const query = context.env.DB.prepare(`SELECT id  from user where email = '${registerData.email}' and password = '${registerData.password}'`);\n                    //get the result\n                    //const queryResult = await query.first();\n                    const data = {\n                        \"templateId\": context.env.SIGNUPEMAILTEMPLATEID,\n                        \"to\": registerData.email,\n                        \"templateVariables\": {\n                            \"name\": `${registerData.username}`,\n                            \"product_name\": `${context.env.PRODUCTNAME}`,\n                            \"action_url\": `${context.env.ADMINURL}verify?verifycode=${verifyCode}`,\n                            \"login_url\": `${context.env.ADMINURL}account-login`,\n                            \"username\": `${registerData.username}`,\n                            \"sender_name\": `${context.env.SENDEREMAILNAME}`\n                        }\n                    };\n\n\n                    //console.log(\"data\")\n                    //console.log(data)\n                    //call the cloudflare API for a one time URL\n                    const responseEmail = await fetch(context.env.EMAILAPIURL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(data)\n                    });\n                    //get the repsonse\n                    const emailResponse = await responseEmail.json();\n                    //console.log(emailResponse)\n                    return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n                } else\n                    return new Response(JSON.stringify({ error: \"error registering\" }), { status: 400 });\n            } else {\n                return new Response(JSON.stringify({ error: \"email already exists\" }), { status: 400 });\n            }\n        }\n\n        //check if we want to login a user\n        if (registerData.action == 2) {\n            if ((registerData.email == undefined) || (registerData.password == undefined))\n                return new Response(JSON.stringify({ error: \"invalid login\" }), { status: 400 });\n\n\n            //prepare the query\n            const query = context.env.DB.prepare(`SELECT user.isDeleted,user.isBlocked,user.name,user.username,user.email,user.phone,user.id,user.isAdmin,userAccess.foreignId,user.apiSecret from user LEFT JOIN userAccess ON user.id = userAccess.userId where user.email = '${registerData.email}' and user.password = '${registerData.password}'`);\n            //get the result\n            //note : we could make this return first and not all \n            const queryResult = await query.all();\n            //check the length\n            if (queryResult.results.length > 0) {\n                //set the user\n                let user = queryResult.results[0];\n\n                //check if they are blocked\n                if (user.isBlocked == 1)\n                    return new Response(JSON.stringify({ error: \"user account is blocked\" }), { status: 400 });\n\n                //check if they are deleted\n                if (user.isDeleted == 1)\n                    return new Response(JSON.stringify({ error: \"user does not exist\" }), { status: 400 });\n\n                if (user.isAdmin == 1) {\n                    //prepare the query\n                    const query2 = context.env.DB.prepare(`SELECT COUNT(*) as total from property where isDeleted = 0`);\n                    const queryResult2 = await query2.first();\n                    user.foreignCount = queryResult2.total;\n                } else {\n\n                    //prepare the query\n                    const query2 = context.env.DB.prepare(`SELECT COUNT(*) as total from property_owner where userId = ${user.id} and isDeleted = 0 `);\n                    const queryResult2 = await query2.first();\n                    user.foreignCount = queryResult2.total;\n                }\n                //sign the token\n                const token = await jwt.sign({ id: user.id, password: user.password, username: user.username, isAdmin: user.isAdmin }, env.SECRET)\n                // Verifing token\n                const isValid = await jwt.verify(token, env.SECRET)\n                //check it is true\n                if (isValid == true) {\n                    //note: we are sending down the isAdmin status the reason for this is it makese certain front end tasks easier but for any \n                    //      read / writes to the database we will always check the entry we have for them before we allow it to happebn.\n                    return new Response(JSON.stringify({ \"jwt\": token, \"user\": { \"id\": user.id, \"name\": user.name, \"username\": user.username, \"email\": user.email, \"phone\": user.phone, \"isAdmin\": user.isAdmin, \"foreignCount\": user.foreignCount, \"secret\": user.apiSecret } }), { status: 200 });\n                } else {\n                    return new Response(JSON.stringify({ error: \"invalid login\" }), { status: 400 });\n\n                }\n\n            } else {\n                return new Response(JSON.stringify({ error: \"username  / password issue\" }), { status: 400 });\n            }\n        }\n\n        //check if we want to do forgot password flow\n        //todo : this code.\n        if (registerData.action == 3) {\n            //check the email exists\n            const email = registerData.email;\n            const query = context.env.DB.prepare(`SELECT COUNT(*) as total from user where email = '${email}'`);\n            const queryResult = await query.first();\n            if (queryResult.total > 0) {\n                //updat the database\n                let verifyCode = uuid.v4();\n                const stmt = await context.env.DB.prepare(`update user set resetPassword = 1,verifyCode='${verifyCode}'  where email = '${email}'`)\n                    .run()\n                if (stmt.success == true) {\n\n                    const query = context.env.DB.prepare(`SELECT username  from user where email = '${email}'`);\n                    //get the result\n                    const queryResult = await query.first();\n                    const data = {\n                        \"templateId\": context.env.FORGOTPASSWORDEMAILTEMPLATEID,\n                        \"to\": email,\n                        \"templateVariables\": {\n                            \"name\": `${queryResult.username}`,\n                            \"product_name\": `${context.env.PRODUCTNAME}`,\n                            \"action_url\": `${context.env.ADMINURL}reset-password?resetcode=${verifyCode}`\n                        }\n                    };\n\n\n                    //console.log(\"data\")\n                    //console.log(data)\n                    //call the cloudflare API for a one time URL\n                    const responseEmail = await fetch(context.env.EMAILAPIURL, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(data)\n                    });\n                    const emailResponse = await responseEmail.json();\n\n                    return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n                } else\n                    return new Response(JSON.stringify({ error: \"code not found\" }), { status: 400 });\n            } else {\n                return new Response(JSON.stringify({ error: \"email not found\" }), { status: 400 });\n            }\n\n            //set the resetpassword code\n            //send the email\n            return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n        }\n\n        //verify the user\n        if (registerData.action == 4) {\n\n            const verifyCode = registerData.verifycode;\n            const query = context.env.DB.prepare(`SELECT COUNT(*) as total from user where verifyCode = '${verifyCode}'`);\n            const queryResult = await query.first();\n            if (queryResult.total > 0) {\n                //updat the database\n                const stmt = await context.env.DB.prepare(`update user set isVerified = 1 where verifyCode = '${verifyCode}'`)\n                    .run()\n                if (stmt.success == true)\n                    return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n                else\n                    return new Response(JSON.stringify({ error: \"code not found\" }), { status: 400 });\n            } else {\n                return new Response(JSON.stringify({ error: \"user not found\" }), { status: 400 });\n            }\n        }\n\n        //reset the password\n        if (registerData.action == 5) {\n            const resetCode = registerData.resetcode;\n            const password = registerData.password;\n            const verifyCode = registerData.verifycode;\n            const query = context.env.DB.prepare(`SELECT COUNT(*) as total from user where verifyCode = '${resetCode}'`);\n            const queryResult = await query.first();\n            //console.log(queryResult.total )\n            if (queryResult.total > 0) {\n                const stmt = await context.env.DB.prepare(`update user set resetPassword = 0,password='${password}',verifyCode = '' where verifyCode = '${resetCode}'`)\n                    .run()\n                if (stmt.success == true)\n                    return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n                else\n                    return new Response(JSON.stringify({ error: \"code not found\" }), { status: 400 });\n            } else {\n                return new Response(JSON.stringify({ error: \"reset code not found\" }), { status: 400 });\n\n            }\n\n        }\n\n    } else {\n        return new Response(JSON.stringify({ error: \"Server error\" }), { status: 400 });\n    }\n\n\n}", "//JWT model\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\n//decode the jwt token\nlet decodeJwt = async (req, secret) => {\n    let bearer = req.get('authorization')\n    let details = \"\";\n    if (bearer != null) {\n        bearer = bearer.replace(\"Bearer \", \"\");\n        details = await jwt.decode(bearer, secret)\n    }\n    return (details)\n}\n\nexport async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    if (theToken == \"\")\n       return new Response(JSON.stringify({ error: \"Token required\" }), { status: 400 });\n\n    if (theToken.payload.isAdmin == 1) {\n\n        const { searchParams } = new URL(request.url);\n        //get an order id\n        const emailType = searchParams.get('emailType');\n        const email = searchParams.get('email');\n        const orderId = searchParams.get('orderId');\n        const tranches = searchParams.get('tranches');\n        const name = searchParams.get('name');\n        const total = searchParams.get('total');\n\n        let emailData = \"\";\n        if (emailType == \"paymentLead\") {\n            emailData = {\n                \"templateId\": context.env.PAYMENTLINKTEMPLATEID,\n                \"to\": email,\n                \"templateVariables\": {\n                    \"tranches\": `${tranches}`,\n                    \"product_name\": `${name}`,\n                    \"action_url\": `${context.env.PAYMEURL}payment/?orderId=${orderId}`,\n                    \"total\": `${total}`\n                }\n            };\n\n        }\n        console.log(\"emailData\")\n        console.log(emailData);\n        console.log(context.env.EMAILAPIURL)\n        //console.log(data)\n        //call the cloudflare API for a one time URL\n        const responseEmail = await fetch(context.env.EMAILAPIURL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(emailData)\n        });\n        const emailResponse = await responseEmail.json();\n        console.log(emailResponse)\n        return new Response(JSON.stringify({ status: \"ok\" }), { status: 200 });\n\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n\n    }\n}", "//JWT model\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\n//decode the jwt token\nlet decodeJwt = async (req, secret) => {\n    let bearer = req.get('authorization')\n    console.log(bearer);\n    let details = \"\";\n    if (bearer != null)\n    {\n        bearer = bearer.replace(\"Bearer \", \"\");\n        details = await jwt.decode(bearer, secret)\n    }\n    return (details)\n}\n\nexport async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    if (theToken == \"\")\n        return new Response(JSON.stringify({ error: \"Token required\" }), { status: 400 });\n\n\n    if (theToken.payload.isAdmin == 1) {\n\n        //call the cloudflare API for a one time URL\n        const response = await fetch(context.env.CLOUDFLAREURL, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${context.env.BEARERTOKEN}`\n            }\n        });\n        //get the repsonse\n        const cfresponse = await response.json();\n        //return the URL\n        return new Response(JSON.stringify({ message: `Image has been updated`,url: `${cfresponse.result.uploadURL}` }), { status: 200 });\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n\n    }\n}", "//JWT model\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\n//decode the jwt token\nlet decodeJwt = async (req, secret) => {\n    let bearer = req.get('authorization')\n    bearer = bearer.replace(\"Bearer \", \"\");\n    let details = await jwt.decode(bearer, secret)\n    return (details)\n}\n\n//get the records\nexport async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //get the token\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    //get the search paramaters\n    const { searchParams } = new URL(request.url);\n    //get the tables\n    let theData = searchParams.get('theData');\n    //get the id \n    //let recordId = searchParams.get('id');\n    //get the tables\n    theData = JSON.parse(theData);\n    //console.log(theData);\n    //hold the query\n    let query;\n    //hold the results for the lookups\n    let theResults = [];\n    for (var i = 0; i < theData.length; ++i) {\n        //console.log(theData[i]);\n        //build the query\n        let theSQL = `SELECT id,name from ${theData[i].table}`;\n        //check for a foreign key\n        if (theData[i].foreignKey != \"\")\n        {\n            theSQL = theSQL+` where ${theData[i].foreignKey} = ${theData[i].value}`;\n            //add the is Deleted \n            theSQL = theSQL +` and isDeleted = 0`\n        }\n        else\n        {\n            //add the is Deleted \n            theSQL = theSQL +` where isDeleted = 0`\n        }\n\n        \n        console.log(theSQL)\n        //run it\n        query = context.env.DB.prepare(theSQL);\n        let queryResults = await query.all();\n        //store the results\n        let theJson = {\"table\":theData[i].table,\"key\":theData[i].key,\"theData\": queryResults.results}\n        theResults.push(theJson)\n    }\n    ///return the response\n    return new Response(JSON.stringify(theResults), { status: 200 });\n\n}", "//get the records\nexport async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //get the paramaters\n    const { searchParams } = new URL(request.url);\n    //get the table name\n    let tableName = searchParams.get('tablename');\n    //get the fields\n    let fields = searchParams.get('fields');\n    //set a fields array\n    let fieldsArray = []\n    //set a fin fields array\n    let finFields = [];\n    //check if the fields are pushed up and split it.\n    if (fields != null)\n        fieldsArray = fields.split(',');\n    //check if we only want 1 field and just add it to the array\n    if (fields.includes(\",\")) \n        fieldsArray.push(fields)\n    //get the table schema\n    let query = context.env.DB.prepare(`PRAGMA table_info(${tableName});`);\n    //get them all\n    let queryResults = await query.all();\n    //check we have some fields to process\n    //we have to check this way as when you init an array in JS it always sets its length to zero. \n    if (fieldsArray[0] != '') {\n        //loop through the field results\n        for (var i = 0; i < queryResults.results.length; ++i) {\n            //look for it the fields array\n            for (var i2 = 0; i2 < fieldsArray.length; ++i2) {\n                //check if the name is the same.\n                if (fieldsArray[i2] == queryResults.results[i].name)\n                    finFields.push(queryResults.results[i])\n            }\n        }\n    } else {\n        //just return all the fields\n        finFields = queryResults.results;\n        \n    }\n\n    return new Response(JSON.stringify(finFields), { status: 200 });\n}", "/*\n\nThis is a generic table manager it handles updates, inserts and deletes for any table. It also handles field and whole * returns\n\nnotes\n\nIt always returns a schema (useful for building add record form dynamically)\nIt does not delete it uses a field called isdeleted and this is what hides it from frontend, helps if a user is an idiot\nIt makes assumpations on our usual data strucutres to save some code if you want it more generic then you will have to remove these assumpations\n\n\n\n*/\n\n\n//JWT model\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\nvar uuid = require('uuid');\n//decode the jwt token\nlet decodeJwt = async (req, secret) => {\n    let bearer = req.get('authorization')\n    bearer = bearer.replace(\"Bearer \", \"\");\n    let details = await jwt.decode(bearer, secret)\n    return (details)\n}\n\nexport async function onRequestPut(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //decode the token\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    //check they are an admin\n    if (theToken.payload.isAdmin == 1) {\n        //get the content type\n        const contentType = request.headers.get('content-type')\n        let theData;\n        if (contentType != null) {\n            theData = await request.json();\n\n            //UPDATE users SET name = ?1 WHERE id = ?2\n            let theQuery = `UPDATE ${theData.table} SET `\n            let theQueryValues = \"updatedAt = CURRENT_TIMESTAMP\";\n            let theQueryWhere = \"\";\n            //loop through the query data\n            //console.log(theData.tableData)\n            for (const key in theData.tableData) {\n                let tdata = theData.tableData;\n                //check it is not the table name\n                //note : we could use a more elegant JSON structure and element this check\n                if ((key != \"table\") && (key != \"id\")) {\n                    //build the fields\n                    theQueryValues = theQueryValues + `,${key} = '${tdata[key]}' `\n                }\n                //check for ad id and add a put.\n                if (key == \"id\")\n                    theQueryWhere = ` where id = '${tdata[key]}'`\n            }\n            //compile the query\n            theQuery = theQuery + theQueryValues + theQueryWhere;\n            //console.log(theQuery);\n            const info = await context.env.DB.prepare(theQuery)\n                .run();\n\n\n            return new Response(JSON.stringify({ message: `${theData.table} has been updated` }), { status: 200 });\n        }\n        return new Response(JSON.stringify({ error: \"server\" }), { status: 400 });\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n    }\n}\n\nexport async function onRequestDelete(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //decode the token\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    //check they are an admin\n    if (theToken.payload.isAdmin == 1) {\n        //get the content type\n        const contentType = request.headers.get('content-type')\n        let theData;\n        if (contentType != null) {\n            theData = await request.json();\n            //debug\n            //console.log(\"debug\")\n            //console.log(theData);\n            //console.log(`UPDATE ${theData.tableName} SET isDeleted = 1 WHERE id = ${theData.id}`)\n            const info = await context.env.DB.prepare(`UPDATE ${theData.tableName} SET isDeleted = '1',deletedAt = CURRENT_TIMESTAMP WHERE id = ${theData.id}`)\n                //.bind(1,CURRENT_TIMESTAMP,theData.id)\n                .run();\n            return new Response(JSON.stringify({ message: `${theData.tableName} has been deleted` }), { status: 200 });\n\n        }\n        return new Response(JSON.stringify({ error: \"server\" }), { status: 400 });\n\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n    }\n}\n\n//insert record\nexport async function onRequestPost(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //decode the token\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    //check they are an admin\n    if (theToken.payload.isAdmin == 1) {\n        //get the content type\n        const contentType = request.headers.get('content-type')\n        let theData;\n        if (contentType != null) {\n            //get the data\n            theData = await request.json();\n\n            //console.log(theData)\n            //check if it is a user table and generate an API id\n            let apiSecret = \"\";\n            if (theData.table == \"user\")\n                apiSecret = uuid.v4();\n            //build the query\n            let theQuery = `INSERT INTO ${theData.table} (`\n            let theQueryFields = \"\";\n            let theQueryValues = \"\";\n            //loop through the query data\n            for (const key in theData.tableData) {\n                let tdata = theData.tableData;\n                //check it is not the table name\n                //note : we could use a more elegant JSON structure and element this check\n                if (key != \"table\") {\n                    //build the fields\n                    if (theQueryFields == \"\")\n                        theQueryFields = `'${key}'`\n                    else\n                        theQueryFields = theQueryFields + `,'${key}'`\n\n                    //build the values\n                    if (theQueryValues == \"\")\n                        theQueryValues = `'${tdata[key]}'`\n                    else\n                        theQueryValues = theQueryValues + `,'${tdata[key]}'`\n                }\n            }\n            //compile the query\n            theQuery = theQuery + theQueryFields + \" ) VALUES ( \" + theQueryValues + \" ); \"\n            console.log(theQuery)\n            //run the query\n            const info = await context.env.DB.prepare(theQuery)\n                .run();\n            return new Response(JSON.stringify({ message: `${theData.table} has been added` }), { status: 200 });\n\n        }\n        return new Response(JSON.stringify({ error: \"server\" }), { status: 400 });\n\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n    }\n}\n\n\n// \n//get the records\nexport async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n\n    let theToken = await decodeJwt(request.headers, env.SECRET);\n    //console.log(theToken)\n    //check they are an admin\n    if (theToken.payload.isAdmin == 1) {\n        let query;\n        let queryResults;\n        //get the search paramaters\n        const { searchParams } = new URL(request.url);\n        let checkAdmin = 0;\n        if (searchParams.get('checkAdmin') != null) {\n            checkAdmin = searchParams.get('checkAdmin');\n        }\n        let foreignKey = \"\";\n        if (searchParams.get('foreignKey') != null) {\n            foreignKey = searchParams.get('foreignKey');\n        }\n        \n        //get the table name\n        let tableName = searchParams.get('tablename');\n        //get the table name\n        let fields = searchParams.get('fields');\n        //get the table id\n        let recordId = \"\";\n        if (searchParams.get('recordId') != null)\n            recordId = searchParams.get('recordId');\n\n        \n        //set an array for the results\n        let schemaResults = [];\n        //create the data array we are going to send back to the frontend.\n        let queryFin = {};\n\n\n        //check if they also want the data\n        //build the where statement if they sent up and id\n        let sqlWhere = `where ${tableName}.isDeleted = 0 `;\n\n        //if ((recordId != \"\") && (foreignId == \"\"))\n        //console.log(recordId)\n        //check if we have a record ID but not a foreign Id the we just want to check against the id.\n        if ((recordId != \"\") && (foreignKey == \"\"))\n            sqlWhere = sqlWhere + ` and id = ${recordId}`\n        \n\n        if (checkAdmin != 0) {\n            sqlWhere = sqlWhere + ` and ${tableName}.adminId = ${theToken.payload.id}`\n        }\n\n        //we have  a foreign Id and a record Id so check against the foreign id. \n        if ((foreignKey != \"\") && (recordId != \"\"))\n        {\n            sqlWhere = sqlWhere + ` and ${foreignKey} = ${recordId}`\n        }\n        \n        //process the fields\n        let tmp = fields.split(\",\");\n        //not we dont want to show the isDeleted flag if there. \n        //console.log(tmp.length)\n        let theQuery = \"\"\n        if (tmp.length == 1) {\n            theQuery = `SELECT * from ${tableName} ${sqlWhere} `\n            //console.log(\"theQuery a\")\n            //console.log(theQuery)\n            query = context.env.DB.prepare(theQuery);\n        } else {\n            let fields = \"\";\n            for (var i = 0; i < tmp.length; ++i) {\n                if (fields == \"\")\n                    fields = tmp[i];\n                else\n                    fields = fields + \",\" + tmp[i]\n            }\n\n            theQuery = `SELECT ${fields} from ${tableName} ${sqlWhere}`\n            //console.log(\"theQuery b\")\n            console.log(theQuery)\n            query = context.env.DB.prepare(theQuery);\n        }\n\n        queryResults = await query.all();\n        //console.log(queryResults.results)\n        queryFin.data = queryResults.results;\n\n        return new Response(JSON.stringify(queryFin), { status: 200 });\n    } else {\n        return new Response(JSON.stringify({ error: \"naughty, you are not an admin\" }), { status: 400 });\n    }\n}", "export async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //request.headers.set('Access-Control-Allow-Origin', '*');\n    //request.headers.set('Access-Control-Max-Age', '86400');\n    //console.log(request.headers)\n    //get the search paramaters\n    const { searchParams } = new URL(request.url);\n    //get the id\n    let id = searchParams.get('id');\n    //check if there is a property id.\n    if (id == null)\n        return new Response(JSON.stringify({ error: \"no property id\" }), { status: 400 });\n\n   // const property = context.env.DB.prepare(`SELECT property_amenities.name as amenitiesname,property.name,property.address_1,property.address_2,property.address_3,property.address_4,property.address_5,property.address_6,property.propertyType,property.state,property.description,property.internationalCost,property.internationalCurrency,property.id,property.area,property.bedrooms,property.bathrooms,property.garage from property LEFT JOIN property_amenities ON property.id = property_amenities.propertyId where property.id = ${id}`);\n    const property = context.env.DB.prepare(`SELECT property.name,property.address_1,property.address_2,property.address_3,property.address_4,property.address_5,property.address_6,property.location,property.propertyType,property.state,property.description,property.internationalCost,property.internationalCurrency,property.id,property.area,property.bedrooms,property.bathrooms,property.garage,property.tranches,property.tranchesSold,property.tranchePrice from property where property.id = ${id}`);\n    const propertyResult = await property.first();\n    const amenities = context.env.DB.prepare(`SELECT property_amenities.name from property_amenities where property_amenities.propertyId = ${id}`);\n    const amenitiesResults = await amenities.all();\n    const images = context.env.DB.prepare(`SELECT property_images.url from property_images where property_images.propertyId = ${id}`);\n    const imagesResults = await images.all();\n\n    //console.log(amenitiesResults.results);\n    propertyResult.amenities = amenitiesResults.results;\n    propertyResult.images = imagesResults.results;\n\n    //console.log(propertyResult)\n    return new Response(JSON.stringify(propertyResult), { status: 200, headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Max-Age': '86400',\n    }, });\n\n}\n\nexport async function onRequestPost(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //request.headers.set('Access-Control-Allow-Origin', '*');\n    //request.headers.set('Access-Control-Max-Age', '86400');\n    //console.log(request.headers)\n    //get the search paramaters\n    const { searchParams } = new URL(request.url);\n    //get the id\n    let tranches = searchParams.get('tranches');\n    let email = searchParams.get('email');\n    let id = searchParams.get('id');\n    console.log(email)\n   \n    const info = await context.env.DB.prepare(\"insert into property_leads (propertyId,email,tranchesRequested) VALUES (?1,?2,?3)\")\n    .bind(id, email,tranches)\n    .run();\n\n    //console.log(propertyResult)\n    return new Response(JSON.stringify({\"message\":\"ok\"}), { status: 200, headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Max-Age': '86400',\n    }, });\n\n}", "export async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //get the search paramaters\n    const { searchParams } = new URL(request.url);\n    //get the id\n    let id = searchParams.get('id');\n    //check if there is a property id.\n    if (id == null)\n        return new Response(JSON.stringify({ error: \"no property id\" }), { status: 400 });\n\n    const costs = context.env.DB.prepare(`SELECT SUM(amountInternational) as total from rental_cost where propertyId = '${id}'`);\n    const costResults = await costs.first();\n    const payments = context.env.DB.prepare(`SELECT SUM(amountInternational) as total from rental_payment where propertyId = '${id}'`);\n    const paymentResults = await payments.first();\n    const dist = context.env.DB.prepare(`SELECT SUM(amountInternational) as total from property_distribution where propertyId = '${id}'`);\n    const distResults = await dist.first();\n    //get the token for the property\n    const token = context.env.DB.prepare(`SELECT * from property_token where propertyId = ${id} and isDeleted = 0`);\n    const tokenResult = await token.first();\n    //get the property owners\n    const owners = context.env.DB.prepare(`SELECT property_owner.id,property_owner.tokenAmount,user.name,user.email,user.cryptoAddress from property_owner LEFT JOIN user ON property_owner.userId = user.id where property_owner.propertyTokenId = ${tokenResult.id}`);\n    const ownersResult = await owners.all();\n    let totalLeft = (paymentResults.total,+costResults.total)-distResults.total;\n    let result = { \"totalCosts\": costResults.total, \"totalPayments\": paymentResults.total,\"totalDistributions\":distResults.total,\"totalLeft\":totalLeft, 'token': tokenResult, \"owners\": ownersResult.results }\n    return new Response(JSON.stringify(result), { status: 200 });\n\n}", "export async function onRequestGet(context) {\n    //build the paramaters\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    //build the result\n    let result = {}\n    //get the search paramaters\n    const { searchParams } = new URL(request.url);\n    //get the id\n    let id = searchParams.get('id');\n    //check if there is a property id.\n    if (id == null)\n        return new Response(JSON.stringify({ error: \"no property id\" }), { status: 400 });\n    //get the property\n    const property = context.env.DB.prepare(`SELECT * from property where id = ${id}`);\n    const propertyresult = await property.first();\n    //check we have a result\n    if (propertyresult == undefined)\n        return new Response(JSON.stringify({ error: \"no property found with that id\" }), { status: 400 });\n\n    //get the token for the property\n    const token = context.env.DB.prepare(`SELECT * from property_token where propertyId = ${id}`);\n    const tokenresult = await token.first();\n    //get the owners for the property\n\n    console.log(tokenresult)\n    if (tokenresult != undefined) {\n        const owners = context.env.DB.prepare(`SELECT property_owner.id,property_owner.tokenAmount,user.name,user.email from property_owner LEFT JOIN user ON property_owner.userId = user.id where property_owner.propertyTokenId = ${tokenresult.id}`);\n        const ownersresults = await owners.all();\n        //get the owners for the  distributions\n        const distributions = context.env.DB.prepare(`SELECT * from property_distribution where propertyId = ${id}`);\n        const distributionsresults = await distributions.all();\n        result.owners = ownersresults.results;\n        result.distributions = distributionsresults.results;\n    } else {\n        result.owners = {}\n        result.distributions = {}\n    }\n    //get the agreement\n    const agreement = context.env.DB.prepare(`SELECT * from rental_agreement where propertyId = ${id}`);\n    const agreementresults = await agreement.all();\n    //get the costs\n    const costs = context.env.DB.prepare(`SELECT * from rental_cost where propertyId = ${id}`);\n    const costsresults = await costs.all();\n    //get the payments\n    const payments = context.env.DB.prepare(`SELECT * from rental_payment where propertyId = ${id}`);\n    const paymentsresults = await payments.all();\n    //debug\n    //console.log(propertyresult);\n    //console.log(tokenresult);\n    //console.log(costsresults);\n    //console.log(paymentsresults.results);\n\n\n    result.property = propertyresult;\n    result.token = tokenresult;\n    result.agreements = agreementresults.results;\n    result.costs = costsresults.results;\n    result.payments = paymentsresults.results;\n    //return it\n    return new Response(JSON.stringify(result), { status: 200 });\n}", "//hold the payload\nlet payLoad;\n//hold the contenttypes\nlet contentType;\n//settings schema\nlet settingsSchema = '{\"companyname\":\"\"}'\n//JWT model\nconst jwt = require('@tsndr/cloudflare-worker-jwt');\n\n\n//decode the jwt token\nlet decodeJwt = async (req, secret) => {\n    let bearer = req.get('authorization')\n    bearer = bearer.replace(\"Bearer \", \"\");\n    let details = await jwt.decode(bearer, secret)\n    return (details)\n}\n\nexport async function onRequestGet(context) {\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    let details = await decodeJwt(request.headers, env.SECRET)\n    //console.log(details)\n    //set up the KV\n    const KV = context.env.kvdata;\n    //get the settings based on the name\n    let user = await KV.get(\"user\" + details.payload.username);\n    //console.log(user)\n    user = JSON.parse(user)\n    //console.log(user)\n    let pData = await KV.get(\"settings\" + user.user.secret);\n    //console.log(pData)\n    if (pData != null)\n        return new Response(pData, { status: 200 });\n    else\n        return new Response(JSON.stringify({ error: \"Settings not found\" }), { status: 400 });\n\n}\n\n\nexport async function onRequestPut(context) {\n    //const jwt = require('@tsndr/cloudflare-worker-jwt')\n    const {\n        request, // same as existing Worker API\n        env, // same as existing Worker API\n        params, // if filename includes [id] or [[path]]\n        waitUntil, // same as ctx.waitUntil in existing Worker API\n        next, // used for middleware or to fetch assets\n        data, // arbitrary space for passing data between middlewares\n    } = context;\n    try {\n        contentType = request.headers.get('content-type');\n        if (contentType != null) {\n            //get the payload\n            payLoad = await request.json();\n            //console.log(payLoad)\n            //get the details\n            let details = await decodeJwt(request.headers, env.SECRET)\n            //set up the kv data\n            const KV = context.env.kvdata;\n            let user = await KV.get(\"user\" + details.payload.username);\n            //console.log(user)\n            user = JSON.parse(user)\n            let theItem = settingsSchema;\n            theItem = JSON.parse(theItem)\n            //console.log(theItem)\n            //check that they sent up the data\n            //note : we could make this simplier by just parsing the payload array.\n            if (theItem != null) {\n                if (payLoad.companyname != undefined)\n                    theItem.companyname = payLoad.companyname;\n                //console.log(datamain + details.payload.username + payLoad.id)\n                //delete the old one\n                let user = await KV.get(\"user\" + details.payload.username);\n                user = JSON.parse(user)\n                //delete it\n                await KV.delete(\"settings\" + user.user.secret);\n                //put the new one.\n                await KV.put(\"settings\" + user.user.secret, JSON.stringify(theItem));\n                return new Response(JSON.stringify({ message: \"Settings updated\", data: JSON.stringify(theItem) }), { status: 200 });\n            } else\n                return new Response(JSON.stringify({ error: \"Settings not found\" }), { status: 400 });\n\n        }\n    } catch (error) {\n        console.log(error)\n        return new Response(error, { status: 200 });\n    }\n\n}", "import { onRequestPost as __api_admin_account_js_onRequestPost } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/admin/account.js\"\nimport { onRequestGet as __api_admin_email_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/admin/email.js\"\nimport { onRequestGet as __api_admin_image_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/admin/image.js\"\nimport { onRequestGet as __api_database_lookUp_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/lookUp.js\"\nimport { onRequestGet as __api_database_schema_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/schema.js\"\nimport { onRequestDelete as __api_database_table_js_onRequestDelete } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/table.js\"\nimport { onRequestGet as __api_database_table_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/table.js\"\nimport { onRequestPost as __api_database_table_js_onRequestPost } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/table.js\"\nimport { onRequestPut as __api_database_table_js_onRequestPut } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/database/table.js\"\nimport { onRequestGet as __api_properties_crowdfund_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/properties/crowdfund.js\"\nimport { onRequestPost as __api_properties_crowdfund_js_onRequestPost } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/properties/crowdfund.js\"\nimport { onRequestGet as __api_properties_distributions_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/properties/distributions.js\"\nimport { onRequestGet as __api_properties_report_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/properties/report.js\"\nimport { onRequestGet as __api_settings_js_onRequestGet } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/settings.js\"\nimport { onRequestPut as __api_settings_js_onRequestPut } from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/functions/api/settings.js\"\n\nexport const routes = [\n    {\n      routePath: \"/api/admin/account\",\n      mountPath: \"/api/admin\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_admin_account_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/admin/email\",\n      mountPath: \"/api/admin\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_admin_email_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/admin/image\",\n      mountPath: \"/api/admin\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_admin_image_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/database/lookUp\",\n      mountPath: \"/api/database\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_database_lookUp_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/database/schema\",\n      mountPath: \"/api/database\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_database_schema_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/database/table\",\n      mountPath: \"/api/database\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_database_table_js_onRequestDelete],\n    },\n  {\n      routePath: \"/api/database/table\",\n      mountPath: \"/api/database\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_database_table_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/database/table\",\n      mountPath: \"/api/database\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_database_table_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/database/table\",\n      mountPath: \"/api/database\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_database_table_js_onRequestPut],\n    },\n  {\n      routePath: \"/api/properties/crowdfund\",\n      mountPath: \"/api/properties\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_properties_crowdfund_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/properties/crowdfund\",\n      mountPath: \"/api/properties\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_properties_crowdfund_js_onRequestPost],\n    },\n  {\n      routePath: \"/api/properties/distributions\",\n      mountPath: \"/api/properties\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_properties_distributions_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/properties/report\",\n      mountPath: \"/api/properties\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_properties_report_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/settings\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_settings_js_onRequestGet],\n    },\n  {\n      routePath: \"/api/settings\",\n      mountPath: \"/api\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_settings_js_onRequestPut],\n    },\n  ]", "// // This loads all middlewares exposed on the middleware object\n// // and then starts the invocation chain.\n// // The big idea is that we can add these to the middleware export dynamically\n// // through wrangler, or we can potentially let users directly add them as a sort\n// // of \"plugin\" system.\n\nimport {\n\tDispatcher,\n\tMiddleware,\n\t__facade_invoke__,\n\t__facade_register__,\n} from \"/usr/local/lib/node_modules/wrangler/templates/middleware/common.ts\";\n\nimport worker from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/bundle-WUW6O0/middleware-insertion-facade.js\";\n\n// We need to preserve all of the exports from the worker\nexport * from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/bundle-WUW6O0/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\t#noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nconst __facade_modules_fetch__: ExportedHandlerFetchHandler = function (\n\trequest,\n\tenv,\n\tctx\n) {\n\tif (worker.fetch === undefined)\n\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\treturn worker.fetch(request, env, ctx);\n};\n\nfunction getMaskedEnv(rawEnv: unknown) {\n\tlet env = rawEnv as Record<string, unknown>;\n\tif (worker.envWrappers && worker.envWrappers.length > 0) {\n\t\tfor (const wrapFn of worker.envWrappers) {\n\t\t\tenv = wrapFn(env);\n\t\t}\n\t}\n\treturn env;\n}\n\n/**\n * This type is here to cause a type error if a new export handler is added to\n * `ExportHandler` without it being included in the `facade` below.\n */\ntype MissingExportHandlers = Omit<\n\tRequired<ExportedHandler>,\n\t\"tail\" | \"trace\" | \"scheduled\" | \"queue\" | \"test\" | \"email\" | \"fetch\"\n>;\n\nlet registeredMiddleware = false;\n\nconst facade: ExportedHandler<unknown> & MissingExportHandlers = {\n\t...(worker.tail && {\n\t\ttail: maskHandlerEnv(worker.tail),\n\t}),\n\t...(worker.trace && {\n\t\ttrace: maskHandlerEnv(worker.trace),\n\t}),\n\t...(worker.scheduled && {\n\t\tscheduled: maskHandlerEnv(worker.scheduled),\n\t}),\n\t...(worker.queue && {\n\t\tqueue: maskHandlerEnv(worker.queue),\n\t}),\n\t...(worker.test && {\n\t\ttest: maskHandlerEnv(worker.test),\n\t}),\n\t...(worker.email && {\n\t\temail: maskHandlerEnv(worker.email),\n\t}),\n\n\tfetch(request, rawEnv, ctx) {\n\t\tconst env = getMaskedEnv(rawEnv);\n\t\t// Get the chain of middleware from the worker object\n\t\tif (worker.middleware && worker.middleware.length > 0) {\n\t\t\t// Make sure we only register middleware once:\n\t\t\t// https://github.com/cloudflare/workers-sdk/issues/2386#issuecomment-1614715911\n\t\t\tif (!registeredMiddleware) {\n\t\t\t\tregisteredMiddleware = true;\n\t\t\t\tfor (const middleware of worker.middleware) {\n\t\t\t\t\t__facade_register__(middleware);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst __facade_modules_dispatch__: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tenv,\n\t\t\t\tctx,\n\t\t\t\t__facade_modules_dispatch__,\n\t\t\t\t__facade_modules_fetch__\n\t\t\t);\n\t\t} else {\n\t\t\t// We didn't have any middleware so we can skip the invocation chain,\n\t\t\t// and just call the fetch handler directly\n\n\t\t\t// We \"don't care\" if this is undefined as we want to have the same behavior\n\t\t\t// as if the worker completely bypassed middleware.\n\t\t\treturn __facade_modules_fetch__(request, env, ctx);\n\t\t}\n\t},\n};\n\ntype HandlerFn<D, R> = (data: D, env: unknown, ctx: ExecutionContext) => R;\nfunction maskHandlerEnv<D, R>(handler: HandlerFn<D, R>): HandlerFn<D, R> {\n\treturn (data, env, ctx) => handler(data, getMaskedEnv(env), ctx);\n}\n\nexport default facade;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/usr/local/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\t\t\t\tconst envWrappers = [__MIDDLEWARE_0__.wrap].filter(Boolean);\n\t\t\t\tconst facade = {\n\t\t\t\t\t...worker,\n\t\t\t\t\tenvWrappers,\n\t\t\t\t\tmiddleware: [\n\t\t\t\t\t\t__MIDDLEWARE_0__.default,\n            ...(worker.middleware ? worker.middleware : []),\n\t\t\t\t\t].filter(Boolean)\n\t\t\t\t}\n\t\t\t\texport * from \"/usr/local/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\n\t\t\t\tconst maskDurableObjectDefinition = (cls) =>\n\t\t\t\t\tclass extends cls {\n\t\t\t\t\t\tconstructor(state, env) {\n\t\t\t\t\t\t\tlet wrappedEnv = env\n\t\t\t\t\t\t\tfor (const wrapFn of envWrappers) {\n\t\t\t\t\t\t\t\twrappedEnv = wrapFn(wrappedEnv)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsuper(state, wrappedEnv);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\n\n\t\t\t\texport default facade;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += `((?:${token.pattern})${token.modifier})`;\n          } else {\n            route += `(${token.pattern})${token.modifier}`;\n          }\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/pages-yWFpdd/functionsWorker-0.18490381713634818.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\t\t\t\tconst envWrappers = [__MIDDLEWARE_0__.wrap].filter(Boolean);\n\t\t\t\tconst facade = {\n\t\t\t\t\t...worker,\n\t\t\t\t\tenvWrappers,\n\t\t\t\t\tmiddleware: [\n\t\t\t\t\t\t__MIDDLEWARE_0__.default,\n            ...(worker.middleware ? worker.middleware : []),\n\t\t\t\t\t].filter(Boolean)\n\t\t\t\t}\n\t\t\t\texport * from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/pages-yWFpdd/functionsWorker-0.18490381713634818.mjs\";\n\n\t\t\t\tconst maskDurableObjectDefinition = (cls) =>\n\t\t\t\t\tclass extends cls {\n\t\t\t\t\t\tconstructor(state, env) {\n\t\t\t\t\t\t\tlet wrappedEnv = env\n\t\t\t\t\t\t\tfor (const wrapFn of envWrappers) {\n\t\t\t\t\t\t\t\twrappedEnv = wrapFn(wrappedEnv)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsuper(state, wrappedEnv);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\n\n\t\t\t\texport default facade;", "// // This loads all middlewares exposed on the middleware object\n// // and then starts the invocation chain.\n// // The big idea is that we can add these to the middleware export dynamically\n// // through wrangler, or we can potentially let users directly add them as a sort\n// // of \"plugin\" system.\n\nimport {\n\tDispatcher,\n\tMiddleware,\n\t__facade_invoke__,\n\t__facade_register__,\n} from \"/usr/local/lib/node_modules/wrangler/templates/middleware/common.ts\";\n\nimport worker from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/bundle-LfDkkP/middleware-insertion-facade.js\";\n\n// We need to preserve all of the exports from the worker\nexport * from \"/Users/cryptoskillz/Documents/code/orbitlabs/buildingblock/admin/.wrangler/tmp/bundle-LfDkkP/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\t#noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nconst __facade_modules_fetch__: ExportedHandlerFetchHandler = function (\n\trequest,\n\tenv,\n\tctx\n) {\n\tif (worker.fetch === undefined)\n\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\treturn worker.fetch(request, env, ctx);\n};\n\nfunction getMaskedEnv(rawEnv: unknown) {\n\tlet env = rawEnv as Record<string, unknown>;\n\tif (worker.envWrappers && worker.envWrappers.length > 0) {\n\t\tfor (const wrapFn of worker.envWrappers) {\n\t\t\tenv = wrapFn(env);\n\t\t}\n\t}\n\treturn env;\n}\n\n/**\n * This type is here to cause a type error if a new export handler is added to\n * `ExportHandler` without it being included in the `facade` below.\n */\ntype MissingExportHandlers = Omit<\n\tRequired<ExportedHandler>,\n\t\"tail\" | \"trace\" | \"scheduled\" | \"queue\" | \"test\" | \"email\" | \"fetch\"\n>;\n\nlet registeredMiddleware = false;\n\nconst facade: ExportedHandler<unknown> & MissingExportHandlers = {\n\t...(worker.tail && {\n\t\ttail: maskHandlerEnv(worker.tail),\n\t}),\n\t...(worker.trace && {\n\t\ttrace: maskHandlerEnv(worker.trace),\n\t}),\n\t...(worker.scheduled && {\n\t\tscheduled: maskHandlerEnv(worker.scheduled),\n\t}),\n\t...(worker.queue && {\n\t\tqueue: maskHandlerEnv(worker.queue),\n\t}),\n\t...(worker.test && {\n\t\ttest: maskHandlerEnv(worker.test),\n\t}),\n\t...(worker.email && {\n\t\temail: maskHandlerEnv(worker.email),\n\t}),\n\n\tfetch(request, rawEnv, ctx) {\n\t\tconst env = getMaskedEnv(rawEnv);\n\t\t// Get the chain of middleware from the worker object\n\t\tif (worker.middleware && worker.middleware.length > 0) {\n\t\t\t// Make sure we only register middleware once:\n\t\t\t// https://github.com/cloudflare/workers-sdk/issues/2386#issuecomment-1614715911\n\t\t\tif (!registeredMiddleware) {\n\t\t\t\tregisteredMiddleware = true;\n\t\t\t\tfor (const middleware of worker.middleware) {\n\t\t\t\t\t__facade_register__(middleware);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst __facade_modules_dispatch__: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tenv,\n\t\t\t\tctx,\n\t\t\t\t__facade_modules_dispatch__,\n\t\t\t\t__facade_modules_fetch__\n\t\t\t);\n\t\t} else {\n\t\t\t// We didn't have any middleware so we can skip the invocation chain,\n\t\t\t// and just call the fetch handler directly\n\n\t\t\t// We \"don't care\" if this is undefined as we want to have the same behavior\n\t\t\t// as if the worker completely bypassed middleware.\n\t\t\treturn __facade_modules_fetch__(request, env, ctx);\n\t\t}\n\t},\n};\n\ntype HandlerFn<D, R> = (data: D, env: unknown, ctx: ExecutionContext) => R;\nfunction maskHandlerEnv<D, R>(handler: HandlerFn<D, R>): HandlerFn<D, R> {\n\treturn (data, env, ctx) => handler(data, getMaskedEnv(env), ctx);\n}\n\nexport default facade;\n"],
  "mappings": "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",
  "names": ["checkURL", "urls", "i", "uuid", "version", "URL", "contentType", "data", "query", "queryResult", "jwt", "onRequestGet", "decodeJwt", "i2", "onRequestPost", "fields", "onRequestPut", "user", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "parse", "value", "_a", "result", "facade", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "wrap", "envWrappers", "wrap", "facade", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "facade", "__Facade_ScheduledController__", "__facade_modules_fetch__", "middleware_insertion_facade_default", "getMaskedEnv", "registeredMiddleware", "facade", "maskHandlerEnv", "middleware_loader_entry_default"]
}
